#+title: nf-core bytesize on git

Should recommend people check out GitHub desktop, it's pretty easy to do good things, like rebase, add coauthors etc.

https://docs.github.com/en/get-started/using-git/about-git-rebase Some great further reading here


Talk about gh cli and making issues quickly

* Theme

Unknown git features that you may not know are out there

Not an exhaustive tutorial

* GitHub is the daunting thing keeping people from contributing
:PROPERTIES:
:CREATED:  [2023-10-20 Fri 21:49]
:END:
* You've heard of the merge cowboy
:PROPERTIES:
:CREATED:  [2023-10-18 Wed 09:49]
:END:

Let's talk about the rebase ranger
* Other Memes
[[https://miro.medium.com/v2/resize:fit:1200/0*tmfbLDU_hIeg0B3B.jpg]]
* Topics
** Why commits matter
*** Why you should keep them small
*** Why should you take the time to write them often

** What makes a good commit message
- Not interesting

** Co-authoring commits

*** Introduction to Co-authoring Commits
- Paired programming, collaborative contributions to a single commit
- Visibility in a project's history. (~git blame~)

- ~Co-authored-by: name <name@example.com>~
- Pro tip: Use GitHub forwarding email
  ~Co-authored-by: github-user <github-user@users.noreply.github.com>~



*** Example commit

#+begin_src txt
This is a summary of the changes in this commit.

- More detailed explanation of the commit.
- List of changes or improvements made.

Co-authored-by: Jane Doe <jane.doe@example.com>
Co-authored-by: John Smith <john.smith@example.com>
#+end_src

*** TODO GitHub Desktop screenshots

** git bisect
https://stackoverflow.com/questions/4713088/how-to-use-git-bisect#4714297
** Rewriting history
*** Amending commits

~git commit --amend~
- Amending a message ~git commit --amend -m "New commit message"~
  - ~git commit --amend --no-edit~
- Changes the commit hash

- For commits that have *not* been pushed to shared repositories(GitHub).

# - Mention that it's primarily used to correct the last commit but can be used with interactive rebase for earlier commits.
**** TODO Add GH Desktop screenshots
*** rebasing
[[https://wizardzines.com/images/uploads/46d480e3f5029644.png]]
https://wizardzines.com/comics/rules-for-rebasing/
**** interactive rebasing
** Worktrees
https://www.gitkraken.com/wp-content/uploads/2022/03/Worktrees-01-2048x919.png.webp
** gh cli things

- Forking a repo
- Making an issue
- Make a PR

* Git flow vs trunk based?

Interest

* Links
https://missing.csail.mit.edu/2020/version-control/
** Direnv
https://www.youtube.com/watch?v=1joZLTgYLxY
https://www.initialcommit.com/blog/git-bisect
